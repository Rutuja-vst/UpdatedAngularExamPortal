{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport Swal from 'sweetalert2';\nlet UpdateQuestionComponent = class UpdateQuestionComponent {\n  constructor(_route, _question) {\n    this._route = _route;\n    this._question = _question;\n    this.Editor = ClassicEditor;\n    this.quesId = 0;\n  }\n  ngOnInit() {\n    this.quesId = this._route.snapshot.params.quesId;\n    this.quesTitle = this._route.snapshot.params.quesTitle;\n    //alert(this.quesId);\n    this._question.getQuestion(this.quesId).subscribe(data => {\n      this.question = data;\n      console.log(this.question);\n    }, error => {\n      console.log(error);\n    });\n  }\n  //update question\n  updateques() {\n    if (this.question.content.trim() == '' || this.question.content == null) {\n      return;\n    }\n    if (this.question.option1.trim() == '' || this.question.option1 == null) {\n      return;\n    }\n    if (this.question.option2.trim() == '' || this.question.option2 == null) {\n      return;\n    }\n    if (this.question.answer.trim() == '' || this.question.answer == null) {\n      return;\n    }\n    //alert(\"testing\");\n    this._question.updatequestion(this.question).subscribe(data => {\n      Swal.fire('Success ', 'Question updated.', 'success');\n      this.question.content = '';\n      this.question.option1 = '';\n      this.question.option2 = '';\n      this.question.option3 = '';\n      this.question.option4 = '';\n      this.question.answer = '';\n    }, error => {\n      Swal.fire('Error', 'Error in UPDATING question', 'error');\n    });\n  }\n};\nUpdateQuestionComponent = __decorate([Component({\n  selector: 'app-update-question',\n  templateUrl: './update-question.component.html',\n  styleUrls: ['./update-question.component.css']\n})], UpdateQuestionComponent);\nexport { UpdateQuestionComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}